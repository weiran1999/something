import pyecharts.options as opts
from pyecharts.charts import Line
from pyecharts.commons.utils import JsCode
from pyecharts.globals import ThemeType
import csv ,re

def draw(csv_name,year):
    num = []
    for i in range(1,10):
        count = 0
        pattern ='{0}-0{1}-\d\d'.format(year,i)
        csv_reader=csv.reader(open(csv_name,encoding='utf-8'))#读取csv文件,指针位置会放到最后，所以写在的循环位置很关键
        for row in csv_reader:#遍历csv每一行数据
            if re.search(pattern,row[1])!= None :
                count +=1
        num.append(count)
        
    for i in range(10,13):
        count = 0
        pattern = '{0}-{1}-\d\d'.format(year,i)
        csv_reader=csv.reader(open(csv_name,encoding='utf-8'))
        for row in csv_reader:#遍历csv每一行数据
            if re.search(pattern,row[1])!= None :
                count +=1
        num.append(count)
        
    return num
num1 = draw('1.csv',2012)#年份
num2 = draw('1.csv',2013)#年份
num3 = draw('1.csv',2014)#年份
num4 = draw('1.csv',2015)#年份
num5 = draw('1.csv',2016)#年份
num6 = draw('1.csv',2017)#年份
num7 = draw('1.csv',2018)#年份
num8 = draw('1.csv',2019)#年份


data = []
for i in range(1,13):
    data.append('第{0}月'.format(i))

( #init_opts=opts.InitOpts(theme=ThemeType.DARK) #主题颜色
    Line(init_opts=opts.InitOpts(width="1600px", height="800px",theme=ThemeType.LIGHT)) 
    .add_xaxis(
        xaxis_data=data1,     
    )
    .add_yaxis(
        series_name="2012说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        # xaxis_index=1,
        y_axis= num1,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .add_yaxis(
        series_name="2013说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        # xaxis_index=1,
        y_axis= num2 ,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .add_yaxis(
        series_name="2014说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        # xaxis_index=1,
        y_axis= num3 ,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .add_yaxis(
        series_name="2015说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        # xaxis_index=1,
        y_axis= num4 ,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .add_yaxis(
        series_name="2016说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        # xaxis_index=1,
        y_axis= num5 ,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .add_yaxis(
        series_name="2017说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        y_axis= num6 ,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .add_yaxis(
        series_name="2018说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        # xaxis_index=1,
        y_axis= num7 ,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .add_yaxis(
        series_name="2019说说", #要改的名字
        is_smooth=True,
        symbol="emptyCircle",
        is_symbol_show=True,
        # xaxis_index=1,
        y_axis= num8 ,#参数传递
        label_opts=opts.LabelOpts(is_show=True),
        linestyle_opts=opts.LineStyleOpts(width=2),
    )
    .set_global_opts(
        legend_opts=opts.LegendOpts(),
        tooltip_opts=opts.TooltipOpts(trigger="none", axis_pointer_type="cross"),
        xaxis_opts=opts.AxisOpts(
            type_="category",
            axistick_opts=opts.AxisTickOpts(is_align_with_label=True),
            axisline_opts=opts.AxisLineOpts(
                is_on_zero=True, linestyle_opts=opts.LineStyleOpts(color="#d14a61")
            ),
        ),
        yaxis_opts=opts.AxisOpts(
            type_="value",
            splitline_opts=opts.SplitLineOpts(
                is_show=True, linestyle_opts=opts.LineStyleOpts(opacity=1)
            ),
        ),
    )
    .render("说说时间.html")
)
